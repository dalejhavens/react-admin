{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daleh\\\\Documents\\\\GitHub\\\\Web Dev\\\\react-admin\\\\src\\\\components\\\\LineChart.jsx\",\n  _s = $RefreshSig$();\nimport { ResponsiveLine } from \"@nivo/line\";\nimport { useTheme } from \"@mui/material\";\nimport { tokens } from \"../theme\";\nimport { mockLineData as data } from \"../data/mockData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = _ref => {\n  _s();\n  let {\n    isDashboard = false\n  } = _ref;\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  return /*#__PURE__*/_jsxDEV(ResponsiveLine, {\n    data: data,\n    theme: {\n      axis: {\n        domain: {\n          line: {\n            stroke: colors.grey[100]\n          }\n        },\n        legend: {\n          text: {\n            fill: colors.grey[100]\n          }\n        },\n        ticks: {\n          line: {\n            stroke: colors.grey[100],\n            strokeWidth: 1\n          },\n          text: {\n            fill: colors.grey[100]\n          }\n        }\n      },\n      legends: {\n        text: {\n          fill: colors.grey[100]\n        }\n      },\n      tooltip: {\n        container: {\n          color: colors.primary[500]\n        }\n      }\n    },\n    colors: isDashboard ? {\n      datum: \"color\"\n    } : {\n      scheme: \"nivo\"\n    },\n    margin: {\n      top: 50,\n      right: 110,\n      bottom: 50,\n      left: 60\n    },\n    xScale: {\n      type: 'point'\n    },\n    yScale: {\n      type: 'linear',\n      min: 'auto',\n      max: 'auto',\n      stacked: true,\n      reverse: false\n    },\n    yFormat: \" >-.2f\",\n    curve: \"catmullRom\",\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      orient: 'bottom',\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: isDashboard ? undefined : 'transportation',\n      legendOffset: 36,\n      legendPosition: 'middle'\n    },\n    axisLeft: {\n      orient: 'left',\n      tickSize: 5,\n      tickValues: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: isDashboard ? undefined : 'count',\n      legendOffset: -40,\n      legendPosition: 'middle'\n    },\n    pointSize: 10,\n    pointColor: {\n      theme: 'background'\n    },\n    pointBorderWidth: 2,\n    pointBorderColor: {\n      from: 'serieColor'\n    },\n    pointLabelYOffset: -12,\n    useMesh: true,\n    legends: [{\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 100,\n      translateY: 0,\n      itemsSpacing: 0,\n      itemDirection: 'left-to-right',\n      itemWidth: 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: 12,\n      symbolShape: 'circle',\n      symbolBorderColor: 'rgba(0, 0, 0, .5)',\n      effects: [{\n        on: 'hover',\n        style: {\n          itemBackground: 'rgba(0, 0, 0, .03)',\n          itemOpacity: 1\n        }\n      }]\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(LineChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["ResponsiveLine","useTheme","tokens","mockLineData","data","LineChart","isDashboard","theme","colors","palette","mode","axis","domain","line","stroke","grey","legend","text","fill","ticks","strokeWidth","legends","tooltip","container","color","primary","datum","scheme","top","right","bottom","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","undefined","legendOffset","legendPosition","tickValues","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"sources":["C:/Users/daleh/Documents/GitHub/Web Dev/react-admin/src/components/LineChart.jsx"],"sourcesContent":["import { ResponsiveLine } from \"@nivo/line\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../theme\";\r\nimport { mockLineData as data } from \"../data/mockData\";\r\n\r\n\r\nconst LineChart = ({ isDashboard = false}) => {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n\r\n    return (\r\n        <ResponsiveLine\r\n        data={data}\r\n        theme={{\r\n            axis: {\r\n                domain: {\r\n                    line: {\r\n                        stroke: colors.grey[100]\r\n                    }\r\n                },\r\n                legend: {\r\n                    text: {\r\n                        fill: colors.grey[100]\r\n                    }\r\n                },\r\n                ticks: {\r\n                    line: {\r\n                        stroke: colors.grey[100],\r\n                        strokeWidth: 1\r\n                    },\r\n                    text: {\r\n                        fill: colors.grey[100]\r\n                    }\r\n                }\r\n            },\r\n            legends: {\r\n                text: {\r\n                    fill: colors.grey[100]\r\n                }\r\n            },\r\n            tooltip: {\r\n                container: {\r\n                    color: colors.primary[500]\r\n                }\r\n            }\r\n        }}\r\n        colors={isDashboard ? { datum: \"color\" } : { scheme: \"nivo\" }}\r\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n        xScale={{ type: 'point' }}\r\n        yScale={{\r\n            type: 'linear',\r\n            min: 'auto',\r\n            max: 'auto',\r\n            stacked: true,\r\n            reverse: false\r\n        }}\r\n        yFormat=\" >-.2f\"\r\n        curve=\"catmullRom\"\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            orient: 'bottom',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: isDashboard ? undefined : 'transportation',\r\n            legendOffset: 36,\r\n            legendPosition: 'middle'\r\n        }}\r\n        axisLeft={{\r\n            orient: 'left',\r\n            tickSize: 5,\r\n            tickValues: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: isDashboard ? undefined : 'count',\r\n            legendOffset: -40,\r\n            legendPosition: 'middle'\r\n        }}\r\n        pointSize={10}\r\n        pointColor={{ theme: 'background' }}\r\n        pointBorderWidth={2}\r\n        pointBorderColor={{ from: 'serieColor' }}\r\n        pointLabelYOffset={-12}\r\n        useMesh={true}\r\n        legends={[\r\n            {\r\n                anchor: 'bottom-right',\r\n                direction: 'column',\r\n                justify: false,\r\n                translateX: 100,\r\n                translateY: 0,\r\n                itemsSpacing: 0,\r\n                itemDirection: 'left-to-right',\r\n                itemWidth: 80,\r\n                itemHeight: 20,\r\n                itemOpacity: 0.75,\r\n                symbolSize: 12,\r\n                symbolShape: 'circle',\r\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemBackground: 'rgba(0, 0, 0, .03)',\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n    />\r\n    )\r\n}\r\n\r\nexport default LineChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}