{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daleh\\\\Documents\\\\GitHub\\\\Web Dev\\\\react-admin\\\\src\\\\scenes\\\\calendar\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport listPlugin from \"@fullcalendar/list\";\nimport { Box, List, ListItem, ListItemText, Typography, useTheme } from \"@mui/material\";\nimport Header from \"../../components/Header\";\nimport { tokens } from \"../../theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const [currentEvents, setCurrentEvents] = useState([]);\n  const handleDateClick = selected => {\n    const title = prompt(\"Please enter a new title for your event\");\n    const calendarApi = selected.view.calendar;\n    calendarApi.unselect();\n    if (title) {\n      calendarApi.addEvent({\n        id: `${selected.dateStr}-${title}`,\n        title,\n        start: selected.startStr,\n        end: selected.endStr,\n        allDay: selected.allDay\n      });\n    }\n  };\n  const handleEventClick = selected => {\n    if (window.confirm(`Are you sure you want to delete the event '${selected.event.title}'`)) {\n      selected.event.remote();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"CALENDAR\",\n      subtitle: \"Full Calendar Interactive Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        flex: \"1 1 20%\",\n        backgroundColor: colors.primary[400],\n        p: \"15px\",\n        borderRadius: \"4px\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: currentEvents.map(event => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              backgroundColor: colors.greenAccent[500],\n              margin: \"10px 0\",\n              borderRadius: \"2px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: event.title,\n              secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                children: formatDate(event.start, {\n                  year: \"numeric\",\n                  month: \"short\",\n                  day: \"numeric\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flex: \"1 1 100%\",\n        ml: \"15px\",\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          height: \"75vh\",\n          plugins: {\n            dayGridPlugin,\n            timeGridPlugin,\n            interactionPlugin,\n            listPlugin\n          },\n          headerToolbar: {\n            left: \"prev, next today\",\n            center: \"title\",\n            right: \"dayGridMonth, timeGridWeek, timeGridDay, listMonth\"\n          },\n          initialView: \"dayGridMonth\",\n          editable: true,\n          selectable: true,\n          selectMirror: true,\n          dayMaxEvents: true,\n          select: handleDateClick,\n          eventClick: handleEventClick,\n          eventsSet: events => setCurrentEvents(events),\n          initialEvents: [{\n            id: \"1234\",\n            title: \"All-day event\",\n            date: \"2022-12-13\"\n          }, {\n            id: \"4312\",\n            title: \"Timed event\",\n            date: \"2022-12-18\"\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n_s(Calendar, \"CEl+jfRYkzwnyoRHw33njx7NRMY=\", false, function () {\n  return [useTheme];\n});\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["useState","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","Box","List","ListItem","ListItemText","Typography","useTheme","Header","tokens","Calendar","theme","colors","palette","mode","currentEvents","setCurrentEvents","handleDateClick","selected","title","prompt","calendarApi","view","calendar","unselect","addEvent","id","dateStr","start","startStr","end","endStr","allDay","handleEventClick","window","confirm","event","remote","primary","map","backgroundColor","greenAccent","margin","borderRadius","year","month","day","left","center","right","events","date"],"sources":["C:/Users/daleh/Documents/GitHub/Web Dev/react-admin/src/scenes/calendar/index.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport {\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Typography,\r\n    useTheme\r\n} from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport { tokens } from \"../../theme\";\r\n\r\nconst Calendar = () => {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n    const [currentEvents, setCurrentEvents] = useState([]);\r\n\r\n    const handleDateClick = (selected) => {\r\n        const title = prompt(\"Please enter a new title for your event\");\r\n        const calendarApi = selected.view.calendar;\r\n        calendarApi.unselect();\r\n\r\n        if (title) {\r\n            calendarApi.addEvent({\r\n                id: `${selected.dateStr}-${title}`,\r\n                title,\r\n                start: selected.startStr,\r\n                end: selected.endStr,\r\n                allDay: selected.allDay\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleEventClick = (selected) => {\r\n        if (window.confirm(\r\n            `Are you sure you want to delete the event '${selected.event.title}'`\r\n            )\r\n        ) {\r\n            selected.event.remote();\r\n        }\r\n    };\r\n\r\n    return <Box m=\"20px\">\r\n        <Header title=\"CALENDAR\" subtitle=\"Full Calendar Interactive Page\" />\r\n\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n            { /* Calendar Sidebar */ }\r\n            <Box flex=\"1 1 20%\" \r\n            backgroundColor={colors.primary[400]} \r\n            p=\"15px\" \r\n            borderRadius=\"4px\"\r\n            >\r\n                <Typography variant=\"h5\">Events</Typography>\r\n                <List>\r\n                    {currentEvents.map((event) => (\r\n                        <ListItem\r\n                            key={event.id}\r\n                            sx={{ \r\n                                backgroundColor: colors.greenAccent[500],\r\n                                margin: \"10px 0\",\r\n                                borderRadius: \"2px\",\r\n                            }}\r\n                        >\r\n                            <ListItemText\r\n                                primary={event.title}\r\n                                secondary={\r\n                                    <Typography>\r\n                                        {formatDate(event.start, {\r\n                                            year: \"numeric\",\r\n                                            month: \"short\",\r\n                                            day: \"numeric\"\r\n                                        })}\r\n                                    </Typography>\r\n                                }\r\n                            ></ListItemText>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Box>\r\n\r\n            {/* CALENDAR */}\r\n            <Box flex=\"1 1 100%\" ml=\"15px\">\r\n                <FullCalendar \r\n                    height=\"75vh\"\r\n                    plugins={{\r\n                        dayGridPlugin,\r\n                        timeGridPlugin,\r\n                        interactionPlugin,\r\n                        listPlugin\r\n                    }}\r\n                    headerToolbar={{\r\n                        left: \"prev, next today\",\r\n                        center: \"title\",\r\n                        right: \"dayGridMonth, timeGridWeek, timeGridDay, listMonth\"\r\n                    }}\r\n                    initialView=\"dayGridMonth\"\r\n                    editable={true}\r\n                    selectable={true}\r\n                    selectMirror={true}\r\n                    dayMaxEvents={true}\r\n                    select={handleDateClick}\r\n                    eventClick={handleEventClick}\r\n                    eventsSet={(events) => setCurrentEvents(events)}\r\n                    initialEvents={[\r\n                        { id: \"1234\", title: \"All-day event\", date: \"2022-12-13\"},\r\n                        { id: \"4312\", title: \"Timed event\", date: \"2022-12-18\"},\r\n                    ]}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    </Box>\r\n};\r\n\r\nexport default Calendar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}